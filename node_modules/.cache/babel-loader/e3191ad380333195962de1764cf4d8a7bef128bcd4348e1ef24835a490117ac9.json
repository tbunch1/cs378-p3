{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thomas\\\\Documents\\\\GitHub\\\\cs378-p2\\\\src\\\\components\\\\CartProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from \"react\";\n\n// item tracking code and context from ChatGPT \n// https://chatgpt.com/share/67b808ed-0d5c-8006-867e-afaaa0959ed1\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [subtotal, setSubtotal] = useState(0.0);\n  const addToCart = item => {\n    setCart(prevCart => {\n      setSubtotal(subtotal + item.price);\n      console.log(subtotal);\n      const existingItem = prevCart.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        console.log(existingItem.count);\n        return prevCart.map(cartItem => cartItem.id === item.id ? {\n          ...cartItem,\n          count: cartItem.count + 1\n        } : cartItem);\n      } else {\n        // add item and set to one\n        console.log(\"first add\");\n        return [...prevCart, {\n          ...item,\n          count: 1\n        }];\n      }\n    });\n  };\n  const removeFromCart = item => {\n    console.log(\"removing\");\n    setCart(prevCart => {\n      const existingItem = prevCart.find(cartItem => cartItem.id === item.id);\n      console.log(\"find done ig\");\n      if (existingItem && existingItem.count > 0) {\n        setSubtotal(subtotal - existingItem.price);\n      }\n      console.log(subtotal);\n      const newCart = prevCart.map(cartItem => cartItem.id === item.id ? {\n        ...cartItem,\n        count: cartItem.count - 1\n      } : cartItem).filter(cartItem => cartItem.count > 0);\n      return newCart;\n    });\n  };\n  const getCount = id => {\n    const cartItem = cart.find(cartItem => cartItem.id === id);\n    return cartItem ? cartItem.count : 0;\n  };\n  const getSubtotal = id => {\n    return subtotal;\n  };\n  const clearCart = () => {\n    setCart([]);\n    setSubtotal(0);\n  };\n  const cartToString = () => {\n    let txt = \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      subtotal,\n      getCount,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"8zXa10ru/1VygAXvpl5ro4bNSi8=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","subtotal","setSubtotal","addToCart","item","prevCart","price","console","log","existingItem","find","cartItem","id","count","map","removeFromCart","newCart","filter","getCount","getSubtotal","clearCart","cartToString","txt","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/Thomas/Documents/GitHub/cs378-p2/src/components/CartProvider.js"],"sourcesContent":["import { createContext, useState, useContext } from \"react\";\r\n\r\n// item tracking code and context from ChatGPT \r\n// https://chatgpt.com/share/67b808ed-0d5c-8006-867e-afaaa0959ed1\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [subtotal, setSubtotal] = useState(0.0);\r\n\r\n  const addToCart = (item) => {\r\n    setCart((prevCart) => {\r\n      setSubtotal(subtotal + item.price);\r\n      console.log(subtotal);\r\n      const existingItem = prevCart.find((cartItem) => cartItem.id === item.id);\r\n      if (existingItem) {\r\n        console.log(existingItem.count)\r\n        return prevCart.map((cartItem) =>\r\n          cartItem.id === item.id ? { ...cartItem, count: cartItem.count + 1 } : cartItem\r\n        );\r\n      } else {\r\n        // add item and set to one\r\n        console.log(\"first add\")\r\n        return [...prevCart, { ...item, count: 1 }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (item) => {\r\n    console.log(\"removing\");\r\n    setCart((prevCart) => {\r\n      const existingItem = prevCart.find((cartItem) => cartItem.id === item.id);\r\n      console.log(\"find done ig\")\r\n      if (existingItem && existingItem.count > 0) {\r\n        setSubtotal(subtotal - existingItem.price);\r\n      }\r\n      console.log(subtotal)\r\n      const newCart = prevCart\r\n        .map((cartItem) =>\r\n          cartItem.id === item.id ? { ...cartItem, count: cartItem.count - 1 } : cartItem\r\n        )\r\n        .filter((cartItem) => cartItem.count > 0)\r\n      return newCart\r\n   });\r\n\r\n  };\r\n\r\n  const getCount = (id) => {\r\n    const cartItem = cart.find((cartItem) => cartItem.id === id);\r\n    return cartItem ? cartItem.count : 0;\r\n  };\r\n\r\n  const getSubtotal = (id) => {\r\n    return subtotal;\r\n  }\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n    setSubtotal(0);\r\n  }\r\n\r\n\r\n  const cartToString = () => {\r\n    let txt = \"\"\r\n  }\r\n\r\n  return (\r\n\r\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, subtotal, getCount, clearCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}