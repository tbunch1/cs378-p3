{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thomas\\\\Documents\\\\GitHub\\\\cs378-p3\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport SongList, { displayWeather } from \"./components/WeatherList\";\nimport { fetchWeatherApi } from 'openmeteo';\n\n// import 'bootstrap/dist/css/bootstrap.min.css'; // This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\n\n// Menu data. An array of objects where each object represents a menu item. Each menu item has an id, title, description, image name, and price.\n// You can use the image name to get the image from the images folder.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst menuItems = [{}];\nconst App = () => {\n  _s();\n  const [search, setSearch] = useState(\"Chicago\");\n  const [weather, setWeather] = useState([]);\n  const [location, setLocation] = useState(\"\");\n  const [tempWeather, setTempWeather] = useState([]);\n  const setCity = async name => {\n    const success = await getCity({\n      name\n    });\n    if (success) {\n      setWeather(tempWeather);\n      setLocation(name);\n    }\n    return;\n  };\n  const getCity = async name => {\n    console.log({\n      name\n    }.name);\n    console.log('https://geocoding-api.open-meteo.com/v1/search?name=' + {\n      name\n    }.name);\n    try {\n      const res = await fetch('https://geocoding-api.open-meteo.com/v1/search?name=' + {\n        name\n      }.name);\n      const results = await res.json();\n      console.log(results.results[0]);\n      if (results.results && results.results.length > 0) {\n        const latitude = results.results[0].latitude;\n        const longitude = results.results[0].latitude;\n        const url = \"https://api.open-meteo.com/v1/forecast?latitude=\" + {\n          latitude\n        }.latitude + \"&longitude=\" + {\n          longitude\n        }.longitude + \"&hourly=temperature_2m&timezone=America%2FChicago&forecast_days=2&temperature_unit=fahrenheit\";\n        const responses = await fetch(url);\n        const weather = await responses.json();\n        console.log(weather);\n        const tempDates = weather.hourly.time.map((time, index) => [time, weather.hourly.temperature_2m[index]]);\n        setTempWeather(tempDates);\n        return true;\n      } else {\n        alert(\"Could not find city \" + {\n          name\n        }.name);\n        return false;\n      }\n    } catch (error) {\n      console.log({\n        error\n      });\n      alert(\"Error in finding city \" + {\n        name\n      }.name);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"menu-button\",\n          onClick: () => setCity(\"Austin\"),\n          children: \"Austin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"menu-button\",\n          onClick: () => setCity(\"Chicago\"),\n          children: \"Chicago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"menu-button\",\n          onClick: () => setCity(\"Las Vegas\"),\n          children: \"Las Vegas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            width: \"80px\",\n            type: \"text\",\n            value: search,\n            onChange: e => setSearch(e.target.value),\n            placeholder: \"Search a city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setCity(\"Chicago\"),\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nZus6+dbMFzS3h9sAkp3OCUlWA8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SongList","displayWeather","fetchWeatherApi","jsxDEV","_jsxDEV","menuItems","App","_s","search","setSearch","weather","setWeather","location","setLocation","tempWeather","setTempWeather","setCity","name","success","getCity","console","log","res","fetch","results","json","length","latitude","longitude","url","responses","tempDates","hourly","time","map","index","temperature_2m","alert","error","children","class","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Thomas/Documents/GitHub/cs378-p3/src/App.js"],"sourcesContent":["import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; \r\nimport React, { useState } from 'react';\r\nimport SongList, { displayWeather } from \"./components/WeatherList\"\r\nimport { fetchWeatherApi } from 'openmeteo';\r\n\r\n// import 'bootstrap/dist/css/bootstrap.min.css'; // This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\r\n\r\n// Menu data. An array of objects where each object represents a menu item. Each menu item has an id, title, description, image name, and price.\r\n// You can use the image name to get the image from the images folder.\r\nconst menuItems = [\r\n  {\r\n\r\n  }\r\n];\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [search, setSearch] = useState(\"Chicago\");\r\n  const [weather, setWeather] = useState([]);\r\n  const [location, setLocation] = useState(\"\")\r\n  const [tempWeather, setTempWeather] = useState([]);\r\n\r\n  const setCity = async(name) => {\r\n    const success = await getCity({name});\r\n    if (success) {\r\n      setWeather(tempWeather);\r\n      setLocation(name)\r\n    }\r\n    return;\r\n  }\r\n\r\n\r\n\r\n  const getCity = async (name) => {\r\n    console.log({name}.name);\r\n    console.log('https://geocoding-api.open-meteo.com/v1/search?name=' + {name}.name);\r\n    try {\r\n        const res = await fetch('https://geocoding-api.open-meteo.com/v1/search?name=' + {name}.name);\r\n        const results = await res.json();\r\n        console.log(results.results[0]);\r\n        if (results.results && results.results.length > 0) {\r\n          const latitude = results.results[0].latitude;\r\n          const longitude = results.results[0].latitude;\r\n\r\n            const url = \"https://api.open-meteo.com/v1/forecast?latitude=\" + {latitude}.latitude + \"&longitude=\" + {longitude}.longitude + \"&hourly=temperature_2m&timezone=America%2FChicago&forecast_days=2&temperature_unit=fahrenheit\"\r\n            const responses = await fetch(url);\r\n            const weather = await responses.json();\r\n            console.log(weather);\r\n\r\n            const tempDates = weather.hourly.time.map((time, index) => [time, weather.hourly.temperature_2m[index]]);\r\n            setTempWeather(tempDates);\r\n            return true;\r\n        } else {\r\n            alert(\"Could not find city \" + {name}.name);\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        console.log({error});\r\n        alert(\"Error in finding city \" + {name}.name);\r\n        return false;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div class='container'>\r\n        <div class=\"row justify-content-center\">\r\n          <button type=\"button\" class=\"menu-button\" onClick={() => setCity(\"Austin\")}>\r\n            Austin\r\n          </button>\r\n        </div>\r\n        <div class='row justify-content-center'>\r\n          <button type=\"button\" class=\"menu-button\" onClick={() => setCity(\"Chicago\")}>\r\n            Chicago\r\n          </button>\r\n        </div>\r\n        <div class='row justify-content-center'>\r\n          <button type=\"button\" class=\"menu-button\" onClick={() => setCity(\"Las Vegas\")}>\r\n            Las Vegas\r\n          </button>\r\n        </div>\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-4\">\r\n            <input \r\n              width=\"80px\"\r\n              type=\"text\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              placeholder=\"Search a city\"\r\n            />\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <button \r\n              onClick={setCity(\"Chicago\")}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}