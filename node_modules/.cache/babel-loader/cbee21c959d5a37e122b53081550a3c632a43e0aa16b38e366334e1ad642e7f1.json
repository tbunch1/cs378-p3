{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thomas\\\\Documents\\\\GitHub\\\\cs378-p3\\\\src\\\\components\\\\WeatherList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SongDisplay from \"./SongDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatjerList = () => {\n  _s();\n  const [weather, setWeather] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatjerList, \"qMfgaod/2OvpdQyEX6xt35ISZVA=\");\n_c = WeatjerList;\nexport const displayWeather = name => {\n  const res = getCity(name);\n  return;\n};\nconst getCity = async name => {\n  console.log({\n    name\n  }.name);\n  console.log('https://geocoding-api.open-meteo.com/v1/search?name=' + {\n    name\n  }.name);\n  const res = await fetch('https://geocoding-api.open-meteo.com/v1/search?name=' + {\n    name\n  }.name);\n  const results = await res.json();\n  return results;\n};\nvar _c;\n$RefreshReg$(_c, \"WeatjerList\");","map":{"version":3,"names":["React","useState","SongDisplay","jsxDEV","_jsxDEV","WeatjerList","_s","weather","setWeather","fileName","_jsxFileName","lineNumber","columnNumber","_c","displayWeather","name","res","getCity","console","log","fetch","results","json","$RefreshReg$"],"sources":["C:/Users/Thomas/Documents/GitHub/cs378-p3/src/components/WeatherList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SongDisplay from \"./SongDisplay\"\r\n\r\nconst WeatjerList = () => {\r\n    const [weather, setWeather] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* {songs.map(item => (\r\n                <SongDisplay key={item.id} item={item}/>\r\n            ))} */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const displayWeather = (name) => {\r\n    const res = getCity(name);\r\n    return;\r\n} \r\n\r\nconst getCity = async (name) => {\r\n    console.log({name}.name);\r\n    console.log('https://geocoding-api.open-meteo.com/v1/search?name=' + {name}.name);\r\n    const res = await fetch('https://geocoding-api.open-meteo.com/v1/search?name=' + {name}.name);\r\n    const results = await res.json();\r\n    return results\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAM1C,oBACIG,OAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIK,CAAC;AAEd,CAAC;AAAAN,EAAA,CAdKD,WAAW;AAAAQ,EAAA,GAAXR,WAAW;AAgBjB,OAAO,MAAMS,cAAc,GAAIC,IAAI,IAAK;EACpC,MAAMC,GAAG,GAAGC,OAAO,CAACF,IAAI,CAAC;EACzB;AACJ,CAAC;AAED,MAAME,OAAO,GAAG,MAAOF,IAAI,IAAK;EAC5BG,OAAO,CAACC,GAAG,CAAC;IAACJ;EAAI,CAAC,CAACA,IAAI,CAAC;EACxBG,OAAO,CAACC,GAAG,CAAC,sDAAsD,GAAG;IAACJ;EAAI,CAAC,CAACA,IAAI,CAAC;EACjF,MAAMC,GAAG,GAAG,MAAMI,KAAK,CAAC,sDAAsD,GAAG;IAACL;EAAI,CAAC,CAACA,IAAI,CAAC;EAC7F,MAAMM,OAAO,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;EAChC,OAAOD,OAAO;AAClB,CAAC;AAAA,IAAAR,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}