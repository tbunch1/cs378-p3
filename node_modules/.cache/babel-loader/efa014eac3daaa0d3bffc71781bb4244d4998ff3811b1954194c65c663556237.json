{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thomas\\\\Documents\\\\GitHub\\\\cs378-p3\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport Forecast from './components/Forecast';\n\n// import 'bootstrap/dist/css/bootstrap.min.css'; // This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [weather, setWeather] = useState([]);\n  const [location, setLocation] = useState(\"\");\n  const searchCity = () => {\n    return getCity(search);\n  };\n  const getCity = async name => {\n    console.log({\n      name\n    }.name);\n    console.log('https://geocoding-api.open-meteo.com/v1/search?name=' + {\n      name\n    }.name);\n    try {\n      const res = await fetch('https://geocoding-api.open-meteo.com/v1/search?name=' + {\n        name\n      }.name);\n      const results = await res.json();\n      console.log(results.results[0]);\n      if (results.results && results.results.length > 0) {\n        const latitude = results.results[0].latitude;\n        const longitude = results.results[0].latitude;\n        const url = \"https://api.open-meteo.com/v1/forecast?latitude=\" + {\n          latitude\n        }.latitude + \"&longitude=\" + {\n          longitude\n        }.longitude + \"&hourly=temperature_2m&timezone=America%2FChicago&forecast_days=2&temperature_unit=fahrenheit\";\n        const responses = await fetch(url);\n        const weatherInfo = await responses.json();\n        console.log(weatherInfo);\n        const tempDates = weatherInfo.hourly.time.map((time, index) => [time, weatherInfo.hourly.temperature_2m[index]]);\n        console.log({\n          tempDates\n        }.tempDates);\n        await setWeather({\n          tempDates\n        });\n        await setLocation({\n          name\n        }.name);\n        console.log({\n          weather\n        });\n        return;\n      } else {\n        alert(\"Could not find city \" + {\n          name\n        }.name);\n        return null;\n      }\n    } catch (error) {\n      console.log({\n        error\n      });\n      alert(\"Error in finding city \" + {\n        name\n      }.name);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"menu-button\",\n          onClick: () => getCity(\"Austin\"),\n          children: \"Austin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"menu-button\",\n          onClick: () => getCity(\"Chicago\"),\n          children: \"Chicago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"menu-button\",\n          onClick: () => getCity(\"Las Vegas\"),\n          children: \"Las Vegas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            width: \"80px\",\n            type: \"text\",\n            value: search,\n            onChange: e => setSearch(e.target.value),\n            placeholder: \"Search a city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: searchCity,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), location, weather.map(wthr => /*#__PURE__*/_jsxDEV(Forecast, {\n        item: wthr\n      }, wthr[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eRGdkdzNIVs5+W/NdpyodMZVcBk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Forecast","jsxDEV","_jsxDEV","App","_s","search","setSearch","weather","setWeather","location","setLocation","searchCity","getCity","name","console","log","res","fetch","results","json","length","latitude","longitude","url","responses","weatherInfo","tempDates","hourly","time","map","index","temperature_2m","alert","error","children","class","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","value","onChange","e","target","placeholder","wthr","item","_c","$RefreshReg$"],"sources":["C:/Users/Thomas/Documents/GitHub/cs378-p3/src/App.js"],"sourcesContent":["import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from 'react';\r\nimport Forecast from './components/Forecast'\r\n\r\n// import 'bootstrap/dist/css/bootstrap.min.css'; // This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [weather, setWeather] = useState([]);\r\n  const [location, setLocation] = useState(\"\")\r\n\r\n  const searchCity = () => {\r\n    return getCity(search);\r\n  }\r\n\r\n  const getCity = async (name) => {\r\n    console.log({ name }.name);\r\n    console.log('https://geocoding-api.open-meteo.com/v1/search?name=' + { name }.name);\r\n    try {\r\n      const res = await fetch('https://geocoding-api.open-meteo.com/v1/search?name=' + { name }.name);\r\n      const results = await res.json();\r\n      console.log(results.results[0]);\r\n      if (results.results && results.results.length > 0) {\r\n        const latitude = results.results[0].latitude;\r\n        const longitude = results.results[0].latitude;\r\n\r\n        const url = \"https://api.open-meteo.com/v1/forecast?latitude=\" + { latitude }.latitude + \"&longitude=\" + { longitude }.longitude + \"&hourly=temperature_2m&timezone=America%2FChicago&forecast_days=2&temperature_unit=fahrenheit\"\r\n        const responses = await fetch(url);\r\n        const weatherInfo = await responses.json();\r\n        console.log(weatherInfo);\r\n\r\n        const tempDates = weatherInfo.hourly.time.map((time, index) => [time, weatherInfo.hourly.temperature_2m[index]]);\r\n        console.log({tempDates}.tempDates);\r\n        await setWeather({ tempDates });\r\n        await setLocation({ name }.name);\r\n        console.log({ weather });\r\n        return;\r\n\r\n\r\n\r\n      } else {\r\n        alert(\"Could not find city \" + { name }.name);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.log({ error });\r\n      alert(\"Error in finding city \" + { name }.name);\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div class='container'>\r\n        <div class=\"row justify-content-center\">\r\n          <button type=\"button\" class=\"menu-button\" onClick={() => getCity(\"Austin\")}>\r\n            Austin\r\n          </button>\r\n        </div>\r\n        <div class='row justify-content-center'>\r\n          <button type=\"button\" class=\"menu-button\" onClick={() => getCity(\"Chicago\")}>\r\n            Chicago\r\n          </button>\r\n        </div>\r\n        <div class='row justify-content-center'>\r\n          <button type=\"button\" class=\"menu-button\" onClick={() => getCity(\"Las Vegas\")}>\r\n            Las Vegas\r\n          </button>\r\n        </div>\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-4\">\r\n            <input\r\n              width=\"80px\"\r\n              type=\"text\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              placeholder=\"Search a city\"\r\n            />\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <button\r\n              onClick={searchCity}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n        {location}\r\n        {weather.map(wthr => (\r\n          <Forecast key={wthr[0]} item={wthr} />\r\n        ))}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}